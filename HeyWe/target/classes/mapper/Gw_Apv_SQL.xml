<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="apv">	<!-- exp_con(확장내용) clob사용으로 인해서 -->
	<resultMap type="hashmap" id="ApvDocDtl">
		<result property="APV_NO" column="APV_NO"/>
		<result property="CONSULT_NO" column="CONSULT_NO"/>
		<result property="APV_DOC_TYPE_NAME" column="APV_DOC_TYPE_NAME"/>
		<result property="EMP_NO" column="EMP_NO"/>
		<result property="NAME" column="NAME"/>
		<result property="DEPT_NAME" column="DEPT_NAME"/>
		<result property="DRAFT_DATE" column="DRAFT_DATE"/>
		<result property="IMP_DATE" column="IMP_DATE"/>
		<result property="TITLE" column="TITLE"/>
		<result property="CON" column="CON"/>
		<result property="EXP_CON" column="EXP_CON" jdbcType="CLOB" javaType="String"/>
		<result property="ALLAPV_WHETHER" column="ALLAPV_WHETHER"/>
		<result property="OUT_APV_TYPE_NO" column="OUT_APV_TYPE_NO"/>
	</resultMap>

	<select id="getApvDocCnt" parameterType="hashmap" resultType="Integer">
	SELECT COUNT(*)
	FROM (SELECT CONSULT_NO,NVL(APV_DOC_TYPE_NAME, OUT_APV_TYPE_NAME)AS APV_DOC_TYPE_NAME, TITLE, NAME, DRAFT_DATE, IMP_DATE,
		  APV_DATE, REJER, REJ_DATE, DOC_STATE, RNS, 
                    ROW_NUMBER() OVER(ORDER BY APV_NO DESC)AS RNUM
		  FROM (SELECT A.APV_NO, A.CONSULT_NO, ADT.APV_DOC_TYPE_NAME, TITLE, E.NAME, TO_CHAR(A.DRAFT_DATE)AS DRAFT_DATE,
	           	    NVL(TO_CHAR(A.IMP_DATE),' ')AS IMP_DATE,
	           	    CASE WHEN (SELECT COUNT(*)
	                	       FROM APV_LINE AL
	                           WHERE A.APV_NO = AL.APV_NO) = (SELECT COUNT(*)
	                                                          FROM APV_LINE AL
	                                                          WHERE A.APV_NO = AL.APV_NO
	                                                          AND AL.APV_STATE_NO = 3)
	                     THEN (SELECT MAX(TO_CHAR(AL.APV_DATE))
	                           FROM APV_LINE AL
	                           WHERE A.APV_NO = AL.APV_NO)
	                   ELSE ' '
	                END AS APV_DATE,
	                NVL((SELECT E1.NAME
	                     FROM APV_LINE AL NATURAL JOIN EMP E1
	                     WHERE AL.APV_NO = A.APV_NO
	                     AND AL.APV_STATE_NO = 1),' ')AS REJER,
	                NVL((SELECT TO_CHAR(AL.APV_DATE)
	                     FROM APV_LINE AL
	                     WHERE AL.APV_NO = A.APV_NO
	                     AND AL.APV_STATE_NO = 1),' ')AS REJ_DATE,
	                CASE WHEN (SELECT COUNT(*)
	                           FROM APV_LINE AL
	                           WHERE A.APV_NO = AL.APV_NO) = (SELECT COUNT(*)
	                                                          FROM APV_LINE AL
	                                                          WHERE A.APV_NO = AL.APV_NO
	                                                          AND AL.APV_STATE_NO = 0)
	                     THEN 0                                                  
	                     WHEN (SELECT COUNT(*)
	                           FROM APV_LINE AL
	                           WHERE A.APV_NO = AL.APV_NO) = (SELECT COUNT(*)
	                                                          FROM APV_LINE AL
	                                                          WHERE A.APV_NO = AL.APV_NO
	                                                          AND AL.APV_STATE_NO = 3)  
	                     THEN 2
  	                     WHEN (SELECT COUNT(*)
	                           FROM APV_LINE AL
	                           WHERE A.APV_NO = AL.APV_NO
	                           AND AL.APV_STATE_NO = 2) >= 1  
	                     THEN 3
	                     WHEN (SELECT COUNT(*)
	                           FROM APV_LINE AL
	                           WHERE A.APV_NO = AL.APV_NO
	                           AND AL.APV_STATE_NO = 1) >= 1  
	                     THEN 4
	                     ELSE 1
	                 END AS DOC_STATE,
	                 CASE WHEN #{sEmpNo} = A.EMP_NO
	                      THEN '발신'
	                      ELSE '수신'
	                 END AS RNS, A.OUT_APV_TYPE_NO, CNCT_NO, OAT.OUT_APV_TYPE_NAME
	                 FROM APV A LEFT OUTER JOIN APV_DOC_TYPE ADT
	                                   		 ON A.APV_DOC_TYPE_NO = ADT.APV_DOC_TYPE_NO
	               	    	    	 INNER JOIN EMP E
	                       			    	 ON A.EMP_NO = E.EMP_NO
                                LEFT OUTER JOIN OUT_APV_TYPE OAT
                                             ON A.OUT_APV_TYPE_NO = OAT.OUT_APV_TYPE_NO
	    		     WHERE ((#{sEmpNo} = A.EMP_NO)
	    		     OR #{sEmpNo} IN(SELECT EMP_NO
	                     			 FROM APV_LINE AL
	                     			 WHERE A.APV_NO = AL.APV_NO))
	                 AND DEL_WHETHER = 1    			 
                     ORDER BY A.CONSULT_NO DESC
	    		    )
		    WHERE 1=1
		     <if test="(stdt != '' and stdt != null) and (eddt != '' and eddt != null)">
				<choose>
					<when test="durationSearchGbn == 0">
						AND (DRAFT_DATE BETWEEN TO_CHAR(TO_DATE(#{stdt})) AND TO_CHAR(TO_DATE(#{eddt})))
					</when>
					<when test="durationSearchGbn == 1">
						AND (APV_DATE BETWEEN TO_CHAR(TO_DATE(#{stdt})) AND TO_CHAR(TO_DATE(#{eddt})))
					</when>
					<when test="durationSearchGbn == 2">
						AND (REJ_DATE BETWEEN TO_CHAR(TO_DATE(#{stdt})) AND TO_CHAR(TO_DATE(#{eddt})))
					</when>
					<when test="durationSearchGbn == 3">
						AND (IMP_DATE BETWEEN TO_CHAR(TO_DATE(#{stdt})) AND TO_CHAR(TO_DATE(#{eddt})))
					</when>
				</choose>
			</if>
			<if test="sr != '전체'">
				AND RNS = #{sr}
			</if>
			<if test="asVal != null and asVal != ''">
				AND DOC_STATE IN (${asVal}) <!-- $는 쿼리문으로 인식 -->
			</if>
			<if test="searchTxt != '' and searchTxt != null">
				<choose>
					<when test="docSearchGbn == 0">
						AND TITLE LIKE '%' || #{searchTxt} || '%'
					</when>
					<when test="docSearchGbn == 1">
						AND CONSULT_NO LIKE '%' || #{searchTxt} || '%'
					</when>
					<when test="docSearchGbn == 2">
						AND APV_DOC_TYPE_NAME LIKE '%' || #{searchTxt} || '%'
					</when>
					<when test="docSearchGbn == 3">
						AND NAME LIKE '%' || #{searchTxt} || '%'
					</when>
					<when test="docSearchGbn == 4">
						AND REJER LIKE '%' || #{searchTxt} || '%'
					</when>
				</choose>
			</if>
		)
	</select>
	
	<!-- 결재문서 목록 -->
	<select id="getApvDocList" parameterType="hashmap" resultType="hashmap">
		SELECT T.APV_NO, T.CONSULT_NO, T.APV_DOC_TYPE_NAME, T.TITLE, T.NAME, T.DRAFT_DATE, T.IMP_DATE,
	       		   T.APV_DATE, T.REJER, T.REJ_DATE, CASE T.DOC_STATE WHEN 0 THEN '상신'
	       		   													 WHEN 1 THEN '진행중'	
	       		   													 WHEN 2 THEN '종결'
	       		   													 WHEN 3 THEN '전결'
	       		   													 WHEN 4 THEN '반려'
	       		   													 END AS DOC_STATE, 
	       		   T.RNS
		FROM (SELECT APV_NO, CONSULT_NO, NVL(APV_DOC_TYPE_NAME, OUT_APV_TYPE_NAME)AS APV_DOC_TYPE_NAME, 
					 TITLE, NAME, DRAFT_DATE, IMP_DATE,
	       		     NVL(TO_CHAR(APV_DATE),' ')AS APV_DATE, REJER, REJ_DATE, DOC_STATE, RNS, 
                     ROW_NUMBER() OVER(ORDER BY APV_NO DESC)AS RNUM
			  FROM (SELECT A.APV_NO, A.CONSULT_NO, ADT.APV_DOC_TYPE_NAME, TITLE, E.NAME, TO_CHAR(A.DRAFT_DATE)AS DRAFT_DATE,
	           	    NVL(TO_CHAR(A.IMP_DATE),' ')AS IMP_DATE,
	           	    CASE WHEN ((SELECT COUNT(*)
	                	       FROM APV_LINE AL
	                           WHERE A.APV_NO = AL.APV_NO) = (SELECT COUNT(*)
	                                                          FROM APV_LINE AL
	                                                          WHERE A.APV_NO = AL.APV_NO
	                                                          AND AL.APV_STATE_NO = 3))
	                           OR
	                           ((SELECT COUNT(*)
                                 FROM APV_LINE AL
                                 WHERE A.APV_NO = AL.APV_NO
                                 AND AL.APV_STATE_NO = 2) >= 1)
	                     THEN (SELECT MAX(TO_CHAR(AL.APV_DATE))
	                           FROM APV_LINE AL
	                           WHERE A.APV_NO = AL.APV_NO)
	                   ELSE ' '
	                END AS APV_DATE,
	                NVL((SELECT E1.NAME
	                     FROM APV_LINE AL NATURAL JOIN EMP E1
	                     WHERE AL.APV_NO = A.APV_NO
	                     AND AL.APV_STATE_NO = 1),' ')AS REJER,
	                NVL((SELECT TO_CHAR(AL.APV_DATE)
	                     FROM APV_LINE AL
	                     WHERE AL.APV_NO = A.APV_NO
	                     AND AL.APV_STATE_NO = 1),' ')AS REJ_DATE,
	                CASE WHEN (SELECT COUNT(*)
	                           FROM APV_LINE AL
	                           WHERE A.APV_NO = AL.APV_NO) = (SELECT COUNT(*)
	                                                          FROM APV_LINE AL
	                                                          WHERE A.APV_NO = AL.APV_NO
	                                                          AND AL.APV_STATE_NO = 0)
	                     THEN 0                                                  
	                     WHEN (SELECT COUNT(*)
	                           FROM APV_LINE AL
	                           WHERE A.APV_NO = AL.APV_NO) = (SELECT COUNT(*)
	                                                          FROM APV_LINE AL
	                                                          WHERE A.APV_NO = AL.APV_NO
	                                                          AND AL.APV_STATE_NO = 3)  
	                     THEN 2
  	                     WHEN (SELECT COUNT(*)
	                           FROM APV_LINE AL
	                           WHERE A.APV_NO = AL.APV_NO
	                           AND AL.APV_STATE_NO = 2) >= 1  
	                     THEN 3
	                     WHEN (SELECT COUNT(*)
	                           FROM APV_LINE AL
	                           WHERE A.APV_NO = AL.APV_NO
	                           AND AL.APV_STATE_NO = 1) >= 1  
	                     THEN 4
	                     ELSE 1
	                 END AS DOC_STATE,
	                 CASE WHEN #{sEmpNo} = A.EMP_NO
	                      THEN '발신'
	                      ELSE '수신'
	                 END AS RNS, A.OUT_APV_TYPE_NO, CNCT_NO, OAT.OUT_APV_TYPE_NAME
	                 FROM APV A LEFT OUTER JOIN APV_DOC_TYPE ADT
	                                   		 ON A.APV_DOC_TYPE_NO = ADT.APV_DOC_TYPE_NO
	               	    	    	 INNER JOIN EMP E
	                       			    	 ON A.EMP_NO = E.EMP_NO
                                LEFT OUTER JOIN OUT_APV_TYPE OAT
                                             ON A.OUT_APV_TYPE_NO = OAT.OUT_APV_TYPE_NO
	    		     WHERE ((#{sEmpNo} = A.EMP_NO)
	    		     OR #{sEmpNo} IN(SELECT EMP_NO
	                     			 FROM APV_LINE AL
	                     			 WHERE A.APV_NO = AL.APV_NO))
	                 AND DEL_WHETHER = 1     			 
                     ORDER BY A.CONSULT_NO DESC
	    		    )
			    WHERE 1=1
			     <if test="(stdt != '' and stdt != null) and (eddt != '' and eddt != null)">
					<choose>
						<when test="durationSearchGbn == 0">
							AND (DRAFT_DATE BETWEEN TO_CHAR(TO_DATE(#{stdt})) AND TO_CHAR(TO_DATE(#{eddt})))
						</when>
						<when test="durationSearchGbn == 1">
							AND (APV_DATE BETWEEN TO_CHAR(TO_DATE(#{stdt})) AND TO_CHAR(TO_DATE(#{eddt})))
						</when>
						<when test="durationSearchGbn == 2">
							AND (REJ_DATE BETWEEN TO_CHAR(TO_DATE(#{stdt})) AND TO_CHAR(TO_DATE(#{eddt})))
						</when>
						<when test="durationSearchGbn == 3">
							AND (IMP_DATE BETWEEN TO_CHAR(TO_DATE(#{stdt})) AND TO_CHAR(TO_DATE(#{eddt})))
						</when>
					</choose>
				</if>
				<if test="sr != '전체'">
					AND RNS = #{sr}
				</if>
				<if test="asVal != null and asVal != ''">
					AND DOC_STATE IN (${asVal}) <!-- $는 쿼리문으로 인식 -->
				</if>
				<if test="searchTxt != '' and searchTxt != null">
					<choose>
						<when test="docSearchGbn == 0">
							AND TITLE LIKE '%' || #{searchTxt} || '%'
						</when>
						<when test="docSearchGbn == 1">
							AND CONSULT_NO LIKE '%' || #{searchTxt} || '%'
						</when>
						<when test="docSearchGbn == 2">
							AND APV_DOC_TYPE_NAME LIKE '%' || #{searchTxt} || '%'
						</when>
						<when test="docSearchGbn == 3">
							AND NAME LIKE '%' || #{searchTxt} || '%'
						</when>
						<when test="docSearchGbn == 4">
							AND REJER LIKE '%' || #{searchTxt} || '%'
						</when>
					</choose>
				</if>
			) T
        WHERE T.RNUM BETWEEN #{startCnt} AND #{endCnt}
	</select>
	
	<select id="getApvComplete" parameterType="hashmap" resultType="hashmap">
		SELECT APV_NO, EMP_NO, APV_STATE_NO
		FROM APV_LINE
		WHERE 1=1
		AND APV_STATE_NO != 0
		AND EMP_NO = #{sEmpNo}
	</select>
	
	<!-- 결재양식 구분 목록 -->
	<select id="getApvTypeDivList" parameterType="hashmap" resultType="hashmap">
		SELECT DISTINCT APV_TYPE_DIV_NO, APV_TYPE_DIV_NAME
		FROM APV_TYPE_DIV NATURAL JOIN APV_DOC_TYPE                        
		WHERE DEL_WHETHER = 1    
		<if test="searchTxt != '' and searchTxt != null">
			AND APV_DOC_TYPE_NAME LIKE '%' || #{searchTxt} || '%'
		</if>
		ORDER BY APV_TYPE_DIV_NO
	</select>
	<!-- 결재양식 목록 -->
	<select id="getApvDocTypeList" parameterType="hashmap" resultType="hashmap">
		SELECT APV_DOC_TYPE_NO, APV_TYPE_DIV_NO, APV_DOC_TYPE_NAME
		FROM APV_DOC_TYPE
		WHERE 1=1
		<if test="searchTxt != '' and searchTxt != null">
			AND APV_DOC_TYPE_NAME LIKE '%' || #{searchTxt} || '%'
		</if>
		ORDER BY APV_DOC_TYPE_NO
	</select>
	
	<!-- 선택된 결재양식 -->
	<select id="getApvDocType" parameterType="hashmap" resultType="hashmap">
		SELECT APV_DOC_TYPE_NO, APV_TYPE_DIV_NO, APV_DOC_TYPE_NAME, EXP_TYPE_CON
		FROM APV_DOC_TYPE
		WHERE APV_DOC_TYPE_NO = #{selectedDocType}
	</select>
	
	<!-- 결재라인 - 조직도 부서목록 조회 -->
	<select id="getDeptList" parameterType="hashmap" resultType="hashmap">
		SELECT DEPT_NO, DEPT_NAME
		FROM DEPT
		WHERE CLOSE_WHETHER = 1
		AND DEPT_NO != 0
		ORDER BY DEPT_NO ASC
	</select>
	
	<!-- 결재라인 - 조직도 사원목록 조회 -->
	<select id="getEmpList" parameterType="hashmap" resultType="hashmap">
		SELECT T.DEPT_NO, T.DEPT_NAME, T.POSI_NO, T.POSI_NAME ,T.EMP_NO, T.NAME
		FROM (SELECT HA.DEPT_NO, DE.DEPT_NAME, HA.POSI_NO, PO.POSI_NAME ,HA.EMP_NO, E.NAME
			 FROM EMP E INNER JOIN HR_APNT HA
			                   ON E.EMP_NO = HA.EMP_NO
			           LEFT OUTER JOIN DEPT DE
			                        ON HA.DEPT_NO = DE.DEPT_NO
			           INNER JOIN POSI PO
			                   ON HA.POSI_NO = PO.POSI_NO
			WHERE FNSH_DATE IS NULL
			AND (DE.CLOSE_WHETHER = 1 AND DE.DEPT_NO != 0)
			)T 
		WHERE 1=1
		<if test="sEmpNo != '' and sEmpNo != null">
			AND EMP_NO != #{sEmpNo}
		</if>
		<if test="deptNo != '' and deptNo != null">	<!-- 조직도 부서 클릭 시 -->
			AND DEPT_NO = #{deptNo}
		</if>
		<if test="empName != '' and empName != null">	
			AND NAME LIKE '%' || #{empName} || '%'
		</if>
		<if test="exceptEmpNo != '' and exceptEmpNo != null">
			AND EMP_NO NOT IN (${exceptEmpNo})
		</if>
		ORDER BY POSI_NO DESC, DEPT_NO, EMP_NO DESC
	</select>
	
	
	<!-- 결재문서 상세 -->
	<!-- 결재번호, 품의번호, + 결재양식명 +, + 사원번호 +, 사원명, 부서명, 기안일, 시행일, 제목, 내용, 확장내용 -->
	<select id="getApvDocDtl" parameterType="hashmap" resultMap="ApvDocDtl">
		SELECT A.APV_NO, A.CONSULT_NO, NVL(ADT.APV_DOC_TYPE_NAME, OUT_APV_TYPE_NAME)AS APV_DOC_TYPE_NAME ,E.EMP_NO, E.NAME, 
       			 D.DEPT_NAME, TO_CHAR(A.DRAFT_DATE,'YYYY/MM/DD') AS DRAFT_DATE, 
       			 TO_CHAR(IMP_DATE, 'YYYY/MM/DD')AS IMP_DATE, A.TITLE, A.CON, CONVERT(A.EXP_CON, 'UTF8') AS EXP_CON, A.ALLAPV_WHETHER, A.OUT_APV_TYPE_NO
		FROM APV A INNER JOIN EMP E
                  		   ON A.EMP_NO = E.EMP_NO
           		   INNER JOIN HR_APNT HR
                    	   ON E.EMP_NO = HR.EMP_NO
                    	   AND FNSH_DATE IS NULL
           		   INNER JOIN DEPT D
                   		   ON HR.DEPT_NO = D.DEPT_NO
           		   LEFT OUTER JOIN APV_DOC_TYPE ADT
                   			 	ON A.APV_DOC_TYPE_NO = ADT.APV_DOC_TYPE_NO
           		   LEFT OUTER JOIN OUT_APV_TYPE OAT
                   		        ON A.OUT_APV_TYPE_NO = OAT.OUT_APV_TYPE_NO
		WHERE A.APV_NO = #{apvNo}
		AND DEL_WHETHER = 1
	</select>
	
	<!-- 업무기안의 결재자들의 결재상태, 결재자이름, 코멘트 가져오기 -->
	<select id="getApvDocDtlMenList" parameterType="hashmap" resultType="hashmap">
		SELECT AL.EMP_NO, E.NAME, DE.DEPT_NAME, AL.OPINION_CON, PO.POSI_NO, PO.POSI_NAME, AL.APV_STATE_NO, TO_CHAR(AL.APV_DATE,'YY/MM/DD') AS APV_DATE
		FROM APV_LINE AL INNER JOIN EMP E
		                         ON AL.EMP_NO = E.EMP_NO
		                 INNER JOIN HR_APNT HR
		                         ON AL.EMP_NO = HR.EMP_NO
		                 INNER JOIN POSI PO
		                         ON HR.POSI_NO = PO.POSI_NO
		                 INNER JOIN DEPT DE
		                         ON DE.DEPT_NO = HR.DEPT_NO
		WHERE APV_NO = #{apvNo}
		AND HR.FNSH_DATE IS NULL
		ORDER BY POSI_NO, EMP_NO
	</select>
	
	<!-- 댓글에 필요한 정보 가져오기 -->
	<select id="getOpinion" parameterType="hashmap" resultType="hashmap">
		SELECT AL.EMP_NO, E.NAME, E.PIC, AL.OPINION_CON, PO.POSI_NAME ,AL.APV_STATE_NO, D.DEPT_NAME, CC.CD_NAME
		FROM APV_LINE AL INNER JOIN EMP E
		                         ON AL.EMP_NO = E.EMP_NO
		                 INNER JOIN HR_APNT HR
		                         ON AL.EMP_NO = HR.EMP_NO
		                 INNER JOIN POSI PO
		                         ON HR.POSI_NO = PO.POSI_NO
		                 INNER JOIN DEPT D
                        		 ON HR.DEPT_NO = D.DEPT_NO
                         INNER JOIN CMN_CD CC
                        		 ON AL.APV_STATE_NO = CC.CD_S AND CC.CD_L = 2
		WHERE APV_NO = #{apvNo}
		AND HR.FNSH_DATE IS NULL
		AND AL.OPINION_CON IS NOT NULL
	</select>
	
	<!-- 결재문서 삭제 (삭제여부 변경) -->
	<update id="deleteApvDoc" parameterType="hashmap">
		UPDATE APV
		SET DEL_WHETHER = 0
		WHERE APV_NO = #{apvNo}
	</update>
	
	<!-- 해당 결재에 첨부된 파일 리스트 -->
	<select id="getAttFileList" parameterType="hashmap" resultType="hashmap">
		SELECT ATT_FILE_NO, APV_NO, ATT_FILE_NAME,
        ROW_NUMBER() OVER(ORDER BY ATT_FILE_NO)AS RNUM
		FROM APV_ATT_FILE
		WHERE APV_NO = #{apvNo}
	</select>
	
	<!-- 해당 문서 결재 상태  -->
	<!-- 0: 상신, 1: 진행중, 2: 종결, 3: 전결, 4: 반려 -->
	<select id="getApvState" parameterType="hashmap" resultType="hashmap">
		SELECT A.APV_NO, 
        CASE WHEN (SELECT COUNT(*)
                    FROM APV_LINE AL
                    WHERE A.APV_NO = AL.APV_NO) = (SELECT COUNT(*)
                                                    FROM APV_LINE AL
                                                    WHERE A.APV_NO = AL.APV_NO
                                                    AND AL.APV_STATE_NO = 0)
             THEN 0                                                  
             WHEN (SELECT COUNT(*)
                    FROM APV_LINE AL
                    WHERE A.APV_NO = AL.APV_NO) = (SELECT COUNT(*)
                                                    FROM APV_LINE AL
                                                    WHERE A.APV_NO = AL.APV_NO
                                                    AND AL.APV_STATE_NO = 3)  
             THEN 2
             WHEN (SELECT COUNT(*)
                    FROM APV_LINE AL
                    WHERE A.APV_NO = AL.APV_NO
                    AND AL.APV_STATE_NO = 2) >= 1  
             THEN 3
             WHEN (SELECT COUNT(*)
                    FROM APV_LINE AL
                    WHERE A.APV_NO = AL.APV_NO
                    AND AL.APV_STATE_NO = 1) >= 1  
             THEN 4
             ELSE 1
        END AS DOC_STATE
		FROM APV A
		WHERE A.APV_NO = #{apvNo}
	</select>
	
	<!-- 결재 진행 -->
	<update id="doApv" parameterType="hashmap">
		UPDATE APV_LINE SET APV_STATE_NO = #{apvStateNo}, APV_DATE = SYSDATE, OPINION_CON = #{apvComment}
		WHERE APV_NO = #{apvNo}
		AND EMP_NO = #{sEmpNo}
	</update>
	
	<!-- 결재라인 - 결재자 목록 조회 -->
	<select id="getApverList" parameterType="hashmap" resultType="hashmap">
		SELECT T.DEPT_NO, T.DEPT_NAME, T.POSI_NO, T.POSI_NAME ,T.EMP_NO, T.NAME
		FROM (SELECT HA.DEPT_NO, DE.DEPT_NAME, HA.POSI_NO, PO.POSI_NAME ,HA.EMP_NO, E.NAME
		      FROM HR_APNT HA INNER JOIN EMP E
		                              ON HA.EMP_NO = E.EMP_NO
		                      LEFT OUTER JOIN DEPT DE
		                              ON HA.DEPT_NO = DE.DEPT_NO
		                      INNER JOIN POSI PO
		                              ON HA.POSI_NO = PO.POSI_NO
		      WHERE FNSH_DATE IS NULL
		      AND (DE.CLOSE_WHETHER = 1 AND DE.DEPT_NO != 0) 
		      ORDER BY POSI_NO, EMP_NO
		      )T
		WHERE 1=1
		<if test="exceptEmpNo != '' and exceptEmpNo != null">	<!-- 조직도 부서 클릭 시 -->
			AND T.EMP_NO IN (${exceptEmpNo})
		</if>
	</select>
	
	<!-- 결재 REPORT -->
	
	<!-- 결재 번호 취득 -->
	<select id="getApvNo" parameterType="hashmap" resultType="Integer">
		SELECT APV_SEQ.NEXTVAL
		FROM DUAL
	</select>
	
	<!-- 결재 문서 상신 -->
	<insert id="insertApv" parameterType="hashmap">
		INSERT INTO APV
		VALUES(#{apvNo} , #{apvDocTypeNo}, #{sEmpNo}, SYSDATE, #{impDate}
			,GET_CONSULT_NO(NVL(#{apvDocTypeNo},0)), #{title}, #{con}, #{expCon}, #{allApvWhether}, '1', #{outApvTypeNo}, #{connectNo})
	</insert>
	
	<!-- 상신된 결재문서의 결재라인 추가 -->
	<insert id="addApverToLine" parameterType="hashmap">
		INSERT INTO APV_LINE(APV_LINE_NO, APV_NO, EMP_NO, APV_STATE_NO)
		VALUES(APV_LINE_SEQ.NEXTVAL, #{apvNo}, #{apverEmpNo}, 0)
	</insert>
	
	<!-- 상신한 결재의 첨부파일 저장 -->
	<insert id="addAttFile" parameterType="hashmap">
		INSERT INTO APV_ATT_FILE
		VALUES(APV_ATT_FILE_SEQ.NEXTVAL, #{apvNo}, #{attFileName})
	</insert>
	
	<!-- 결재문서 수정 -->
	
	<!-- 기존 첨부파일 삭제 -->
	<delete id="delAttFile" parameterType="hashmap">
		DELETE FROM APV_ATT_FILE
		WHERE APV_NO = #{apvNo}
		<if test="existAttFiles != '' and existAttFiles != null">	<!-- 기존 첨부파일 중 남겨진 첨부파일 제외 후 삭제 -->
			AND ATT_FILE_NO NOT IN(${existAttFiles})
		</if>
	</delete>
	
	<!-- 기존 결재자 삭제 -->
	<delete id="delApver" parameterType="hashmap">
		DELETE FROM APV_LINE
		WHERE APV_NO = #{apvNo}
	</delete>
	
	<!-- 결재문서 수정 -->
	<update id="updateApv" parameterType="hashmap">
		UPDATE APV SET IMP_DATE = #{impDate} , TITLE = #{title} , CON = #{con} , EXP_CON = #{expCon} , ALLAPV_WHETHER = #{allApvWhether}
		WHERE APV_NO = #{apvNo}
	</update>
	
	<!-- 결재라인 관리 -->
	
	<!-- 결재라인 관리 - 저장된 결재라인 목록 - 저장결재라인명 -->
	<select id="getSApvLineNames" parameterType="hashmap" resultType="hashmap">
		SELECT SAVE_APV_LINE_NO, SAVE_APV_LINE_NAME
		FROM SAVE_APV_LINE
		WHERE EMP_NO = #{sEmpNo}
		AND DEL_WHETHER = '1'
		ORDER BY SAVE_APV_LINE_NO DESC
	</select>
	
	<!-- 결재라인 관리 - 저장된 결재라인 목록 - 저장된결재번호에 맞는 결재라인 목록  -->
	<select id="getSApvLineList" parameterType="hashmap" resultType="hashmap">
		SELECT SAVE_APV_LINE_EMP_NO, SAVE_APV_LINE_NO, EMP_NO, E.NAME, HA.DEPT_NO, DE.DEPT_NAME, HA.POSI_NO, PO.POSI_NAME
		FROM SAVE_APV_LINE_EMP SALM INNER JOIN EMP E
		                                    ON SALM.EMP_NO = E.EMP_NO
		                            INNER JOIN HR_APNT HA
		                                    ON SALM.EMP_NO = HA.EMP_NO
		                            LEFT OUTER JOIN DEPT DE
		                                    ON HA.DEPT_NO = DE.DEPT_NO
		                            INNER JOIN POSI PO
		                                    ON HA.POSI_NO = PO.POSI_NO
		WHERE FNSH_DATE IS NULL
		AND (DE.CLOSE_WHETHER = 1 AND DE.DEPT_NO != 0) 
		AND SAVE_APV_LINE_NO IN(${sApvLineNo})
		ORDER BY SAVE_APV_LINE_EMP_NO, HA.POSI_NO
	</select>
	
	<!-- 사용자별 저장 결재라인 수 (15개 제한) -->
	<select id="getSavedApvLineCnt" parameterType="hashmap" resultType="Integer">
		SELECT COUNT(*)
		FROM SAVE_APV_LINE
		WHERE EMP_NO = #{sEmpNo}
		AND DEL_WHETHER = '1'
	</select>
	
	
	<!-- 저장결재라인 번호 취득 -->
	<select id="getSaveApvLineNo" parameterType="hashmap" resultType="Integer">
		SELECT SAVE_APV_LINE_SEQ.NEXTVAL
		FROM DUAL
	</select>
	
	<!-- 결재라인명으로 저장 -->
	<insert id="insertNewApvLine" parameterType="hashmap">
		INSERT INTO SAVE_APV_LINE
		VALUES(#{saveApvLineNo} , #{sEmpNo}, #{newApvLineName}, '1')
	</insert>
	
	<!-- 저장한 결재라인의 결재자 추가 -->
	<insert id="addApverToSave" parameterType="hashmap">
		INSERT INTO SAVE_APV_LINE_EMP(SAVE_APV_LINE_EMP_NO, SAVE_APV_LINE_NO, EMP_NO)
		VALUES(SAVE_APV_LINE_EMP_SEQ.NEXTVAL, #{saveApvLineNo}, #{apverEmpNo})
	</insert>
	
	<!-- 저장한 결재라인의 삭제여부 변경 -->
	<update id="delApvLine" parameterType="hashmap">
		UPDATE SAVE_APV_LINE SET DEL_WHETHER = '0'
		WHERE SAVE_APV_LINE_NO = #{delApvLineNo}
	</update>
	
</mapper>





